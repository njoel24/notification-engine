apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kafka.name }}
spec:
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.kafka.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.kafka.name }}
    spec:
      containers:
      - name: {{ .Values.kafka.name }}
        image: {{ .Values.kafka.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.kafka.servicePort }}
        env:
        {{- range $key, $value := .Values.kafka.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
        {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.restservice.name }}
spec:
  replicas: {{ .Values.restservice.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.restservice.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.restservice.name }}
    spec:
      containers:
      - name: {{ .Values.restservice.name }}
        image: {{ .Values.restservice.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.restservice.containerPort }}

---
# Wsservice Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.wsservice.name }}
spec:
  replicas: {{ .Values.wsservice.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.wsservice.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.wsservice.name }}
    spec:
      containers:
      - name: {{ .Values.wsservice.name }}
        image: {{ .Values.wsservice.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.wsservice.containerPort }}
        env:
        # ...wsservice env vars if needed...